{"version":3,"sources":["Components/GameUI/Grid.module.css","Components/GameUI/Block.module.css","Components/GameUI/PieceQueue.module.css","Components/GameUI/HeldBlock.module.css","Components/Multiplayer/WaitingMessage.module.css","Components/GameUI/HowToPlay.module.css","UI/NavigationBar.module.css","modules/firebase-config.js","Components/GameUI/Tetrimino.js","store/GameState.js","modules/piece-queue.js","Components/GameUI/Block.js","Components/GameUI/ReadyGo.js","Components/GameUI/Grid.js","Components/GameUI/PieceQueuePiece.js","Components/GameUI/PieceQueue.js","Components/GameUI/HeldBlock.js","modules/KeyControls.js","Components/GameUI/HowToPlay.js","Components/GameUI/Game.js","Pages/SinglePlayer.js","Components/Multiplayer/Login.js","store/UserInfo.js","Components/Multiplayer/OtherUser.js","Components/Multiplayer/OtherUsers.js","Components/Multiplayer/WaitingMessage.js","Components/Multiplayer/InviteNotifcation.js","Components/Multiplayer/InviteNotfications.js","Components/Multiplayer/GetGame.js","Pages/TwoPlayer.js","UI/NavigationBar.js","App.js","store/index.js","index.js"],"names":["module","exports","auth","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getDatabase","rootRef","ref","onlineUsersRef","child","roomsRef","getUsernameFromuid","uid","get","then","snapshot","username","val","TETRIMINOS","I","T","L","J","Z","S","O","pieceArray","getRandomPiece","length","value","Math","floor","random","splice","myRoomRef","getCoords","type","rotatePos","xPos","yPos","map","row","rowPos","col","colPos","x","y","convertMappingToCoords","state","mapping","forGhost","coordArray","array","coord","coordIsValid","push","removeLastState","currentCoords","grid","placeBlocks","colorName","currentShape","ghostCoords","currentCoord","multiplayer","playerNumber","set","pieceQueue","this","elements","head","tail","element","item","isEmpty","dequeue","gameStateSlice","createSlice","name","initialState","gameRunning","currentPieceState","totalLinesCleared","isGameWon","heldPiece","rotated","displayMessage","reducers","reset","empty","newGame","gettingReady","i","enqueue","clearLines","newGrid","linesCleared","every","blockType","unshift","getNewPiece","console","log","rotatePiece","action","originalRotatePos","isCounterClockwise","payload","dropPiece","getGhostCoords","removeLastGhostPiece","ghostYPos","hardDrop","showGhostPiece","shiftLeft","shiftRight","checkIfGameWon","holdPiece","placeHolder","setMultiplayer","roomRef","gameStateActions","actions","Block","props","color","className","styles","block","ReadyGo","gameState","useSelector","style","position","marginLeft","marginTop","fontSize","width","Grid","player2Grid","userInfo","slice","y_pos","x_pos","PieceQueuePiece","PieceQueue","pieces","pieceColor","HeldBlock","heldBlock","keyIsPressed","keyIsDisabled","keyShiftCounter","KeyControls","window","addEventListener","event","key","preventDefault","stopPropagation","HowToPlay","howToPlay","gameLocked","Game","dispatch","useDispatch","useState","startGame","setStartGame","useEffect","dropPieceInterval","setInterval","handleInputInterval","keyHandler","shiftInputInterval","keyShiftHandler","clearInterval","interval","setTimeout","document","onkeydown","keycode","display","SinglePlayer","Login","isLoggedIn","usernameInput","setUsernameInput","loginHandler","signInAnonymously","currentUser","inRoom","logoutHandler","remove","signOut","onClick","onSubmit","id","onChange","target","memo","userInfoSlice","roomStatus","otherUsers","roomKey","opponentName","oppoenentID","invitationKeys","login","logout","setOtherUsers","users","setRoomKey","setRoomStatus","newStatus","setOpponentName","setOpponentid","opponentID","setInvitiationKeys","keysList","setGrid","userInfoActions","OtherUser","pushRoomsRef","createRoomHandler","off","player1","player2","accepted","OtherUsers","otherUsersList","otherUserListDisplay","pair","index","Backdrop","backdrop","ModalOverlay","children","modal","portalElement","getElementById","WaitingMessage","cancelRoomHandler","onDisconnect","onValue","exists","createPortal","InviteNotfication","opponentuid","getOpponentName","InviteNotifications","invitations","GetGame","gridRef","TwoPlayer","userStatus","NavigationBar","setPage","App","page","onAuthStateChanged","user","onChildAdded","Object","entries","filter","room","onChildRemoved","Fragment","pageName","store","configureStore","reducer","gameStateReducer","userInfoReducer","ReactDOM","createRoot","render"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,EAAI,iBAAiB,EAAI,iBAAiB,EAAI,iBAAiB,EAAI,iBAAiB,EAAI,iBAAiB,EAAI,iBAAiB,EAAI,iBAAiB,OAAS,sBAAsB,OAAS,sBAAsB,OAAS,sBAAsB,OAAS,sBAAsB,OAAS,sBAAsB,OAAS,sBAAsB,OAAS,wB,mBCAhaD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,MAAQ,gC,mBCAtED,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,UAAU,iC,+JCoBfC,GADDC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,mDACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAKWC,eACPC,EAAKC,cACLC,EAAUC,YAAIH,GACdI,EAAiBC,YAAMH,EAAQ,SAC/BI,EAAUD,YAAMH,EAAQ,SACxBK,EAAkB,iDAAG,WAAOC,GAAP,iGAE1BC,YAAIJ,YAAMD,EAAeI,IAAME,MAAK,SAAAC,GAAWC,EAAWD,EAASE,MAAMD,YAF/C,gCAGzBA,GAHyB,2CAAH,sD,wBC1BlBE,EAAa,CACxBC,EAAG,CAED,CACE,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEZ,CACE,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEZ,CACE,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEZ,CACE,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAIdC,EAAG,CAED,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGXC,EAAG,CAED,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGXC,EAAG,CAED,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGXC,EAAG,CAED,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGXC,EAAG,CAED,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGXC,EAAG,CAED,CAC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EACnBxB,KAAM,CACH,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAG5ES,WAAY,KACZgB,WAAW,EACXC,UAAW,KACXC,SAAS,EACTC,eAAgB,KAEhBtB,YAAa,KACbC,aAAc,MA+DdsB,SAAU,CACPC,MADO,SACDxC,GACHtB,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/EsB,EAAMU,KAAO,CACV,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAE5EV,EAAMV,KAAO,EACbU,EAAMT,KAAO,EACbS,EAAMX,UAAY,EAClBW,EAAMkC,kBAAoB,EAC1BlC,EAAMsC,eAAiB,KACvBtC,EAAMiC,kBAAoB,gBAC1Bd,EAAWsB,QACXzC,EAAMgC,aAAc,GAEvBU,QAnCO,SAmCC1C,GACLtB,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/EsB,EAAMU,KAAO,CACV,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzE,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAE5EV,EAAMV,KAAO,EACbU,EAAMT,KAAO,EACbS,EAAMX,UAAY,EAClBW,EAAMkC,kBAAoB,EAC1BlC,EAAMsC,eAAiB,QACvBtC,EAAMiC,kBAAoB,gBAC1Bd,EAAWsB,QACXzC,EAAMgC,aAAc,GAEvBW,aArEO,SAqEM3C,GACV,GAAgC,kBAA5BA,EAAMiC,kBACPjC,EAAMiC,kBAAoB,eAC1BjC,EAAMsC,eAAiB,WACnB,GAAgC,iBAA5BtC,EAAMiC,kBAAsC,CACpDjC,EAAMsC,eAAiB,KACvBtC,EAAMgC,aAAc,EACpBhC,EAAMa,aAAelC,IAAiB,GACtC,IAAK,IAAIiE,EAAI,EAAGA,EAAI,EAAGA,IACpBzB,EAAW0B,QAAX,MAAA1B,EAAU,YAAYxC,QAI/BmE,WAlFO,SAkFI9C,GACR,IADe,EACX+C,EAAU,GACVC,EAAe,EAFJ,cAGGhD,EAAMU,MAHT,IAGf,2BAA8B,CAAC,IAApBjB,EAAmB,QACvBA,EAAIwD,OAAM,SAACC,GAAD,MAA6B,SAAdA,MAC1BlD,EAAMkC,mBAAqB,EAC3Bc,GAAgB,GAEhBD,EAAQxC,KAAKd,IARJ,8BAWf,IAAK,IAAImD,EAAI,EAAGA,EAAII,EAAcJ,IAC/BG,EAAQI,QAAQ,CACb,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGNnD,EAAMU,KAAOqC,GAEhBK,YA7GO,SA6GKpD,GACT,GAAKA,EAAMgC,YAAX,CAcA,GAXAhC,EAAMc,YAAc,GACpBd,EAAMqC,SAAU,EAChBrC,EAAMa,aAAeM,EAAWQ,UAChCR,EAAW0B,QAAX,MAAA1B,EAAU,YAAYxC,MACtBqB,EAAMV,KAAO,EACbU,EAAMT,KAAO,EACbS,EAAMX,UAAY,EAClBW,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,OAEhES,EAAMS,cAAc7B,OAAS,EAI9B,OAHAoB,EAAMgC,aAAc,EACpBhC,EAAMsC,eAAiB,gBACvBe,QAAQC,IAAI,QAGf3C,EAAYX,GACZA,EAAMiC,kBAAoB,YAE7BsB,YArIO,SAqIKvD,EAAOwD,GAChB,IAAMC,EAAoBzD,EAAMX,UAChCW,EAAMX,UA9QK,SAACqE,EAAoB1D,GACtC,IAAMX,EAAcW,EAAdX,UACN,OAAIqE,EACiB,IAAdrE,EACM,EAEAA,EAAY,EAGJ,IAAdA,EACM,EAEAA,EAAY,EAkQDkE,CAAYC,EAAOG,QAAS,CAC3CtE,UAAWW,EAAMX,YAEpBmB,EAAgBR,GAChBA,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,OAEhES,EAAMS,cAAc7B,OAAS,GAC9BoB,EAAMX,UAAYoE,EAClBzD,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,QAGpES,EAAMiC,kBAAoB,UAE7BtB,EAAYX,IAEf4D,UA1JO,SA0JG5D,GACP,GAAIA,EAAMgC,YAAa,CACpB,GAAgC,YAA5BhC,EAAMiC,kBAEP,YADAjC,EAAMiC,kBAAoB,UAG7BzB,EAAgBR,GAChBA,EAAMT,MAAQ,EACdS,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,OAEhES,EAAMS,cAAc7B,OAAS,GAC9BoB,EAAMT,MAAQ,EACdS,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,OAEpES,EAAMiC,kBAAoB,WAE1BjC,EAAMiC,kBAAoB,UAE7BtB,EAAYX,KAIlB6D,eApLO,SAoLQ7D,GACZ,GAAKA,EAAMgC,YAAX,EA3OoB,SAAChC,GAAW,IAAD,gBACjBA,EAAMc,aADW,IACrC,2BAAuC,CAAC,IAA7BT,EAA4B,QACpCL,EAAMU,KAAKL,EAAMP,GAAGO,EAAMR,GAAK,QAFG,+BA8O/BiE,CAAqB9D,GACrBA,EAAMc,YAAc,GALD,oBAMDd,EAAMS,eANL,IAMnB,2BAAuC,CAAC,IAA/BJ,EAA8B,QACpCL,EAAMc,YAAYP,KAAK,CAAEV,EAAGQ,EAAMR,EAAGC,EAAGO,EAAMP,KAP9B,8BAUnB,IADA,IAAIiE,EAAY/D,EAAMT,KACc,IAA7BS,EAAMc,YAAYlC,QACtBmF,GAAa,EACb/D,EAAMc,YAAcf,EACjBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMyE,IAC3D,GAGNA,GAAa,EACb/D,EAAMc,YAAcf,EACjBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMyE,IAC3D,KAGNC,SA7MO,SA6MEhE,GACNQ,EAAgBR,GAChBA,EAAMS,cAAgBT,EAAMc,YAC5BH,EAAYX,GACZA,EAAMiC,kBAAoB,UAE7BgC,eAnNO,SAmNQjE,GACPA,EAAMgC,aAGXrB,EAAYX,GAAO,IAEtBkE,UAzNO,SAyNGlE,GACPQ,EAAgBR,GAChBA,EAAMV,MAAQ,EACdU,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,OAEhES,EAAMS,cAAc7B,OAAS,GAC9BoB,EAAMV,MAAQ,EACdU,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,QAGpES,EAAMiC,kBAAoB,UAE7BtB,EAAYX,IAEfmE,WA3OO,SA2OInE,GACRQ,EAAgBR,GAChBA,EAAMV,MAAQ,EACdU,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,OAEhES,EAAMS,cAAc7B,OAAS,GAC9BoB,EAAMV,MAAQ,EACdU,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,QAGpES,EAAMiC,kBAAoB,UAE7BtB,EAAYX,IAEfoE,eA7PO,SA6PQpE,GACRA,EAAMkC,mBAAqB,IAC5BmB,QAAQC,IAAI,OACZtD,EAAMmC,WAAY,EAClBnC,EAAMgC,aAAc,EACpBhC,EAAMsC,eAAiB,YAG7B+B,UArQO,SAqQGrE,GACP,IAAsB,IAAlBA,EAAMqC,QAAV,CAMA,GAHArC,EAAMqC,SAAU,EAEhB7B,EAAgBR,GACQ,OAApBA,EAAMoC,UACPpC,EAAMoC,UAAYpC,EAAMa,aACxBb,EAAMa,aAAeM,EAAWQ,UAChCR,EAAW0B,QAAX,MAAA1B,EAAU,YAAYxC,UAClB,CACJ,IAAM2F,EAActE,EAAMa,aAC1Bb,EAAMa,aAAeb,EAAMoC,UAC3BpC,EAAMoC,UAAYkC,EAErBtE,EAAMV,KAAO,EACbU,EAAMT,KAAO,EACbS,EAAMX,UAAY,EAClBW,EAAMS,cAAgBV,EACnBC,EACAb,EAAUa,EAAMa,aAAcb,EAAMX,UAAWW,EAAMV,KAAMU,EAAMT,OAEpEoB,EAAYX,GACZA,EAAMiC,kBAAoB,YAE7BsC,eA/RO,SA+RQvE,EAAOwD,GACnBxD,EAAMgB,aAAc,EACpBhB,EAAMiB,aAAeuC,EAAOG,QAAQ1C,aACpC/B,EAAYsE,EAAOG,QAAQa,YASvBC,EAAmB7C,EAAe8C,QAEhC9C,IAAf,Q,yCEzce+C,EALD,SAACC,GACb,IAAMC,EAAQD,EAAMC,MACpB,OAAO,oBAAIC,UAAS,UAAKC,IAAOC,MAAZ,aAAsBD,IAAOF,OCgBpCI,EAlBC,WACb,IAAMC,EAAYC,aAAY,SAACnF,GAAD,OAAWA,EAAMkF,aAC/C,OACG,qBACGE,MAAO,CACJC,SAAU,WACVR,MAAO,SACPS,WAAY,GACZC,UAAW,IACXC,SAAS,OACTC,MAAM,QAPZ,SAUIP,EAAU5C,kBC8BLoD,EAvCF,WACV,IAAMR,EAAYC,aAAY,SAACnF,GAAD,OAAWA,EAAMkF,aACzCS,EAAcR,aAAY,SAACnF,GAAD,OAAWA,EAAM4F,SAASlF,QAE1D,GADA2C,QAAQC,IAAIqC,GACe,IAAvBA,EAAY/G,OAAc,CAC3B,IAAM8B,EAAOiF,EAAYhC,QAAQkC,MAAM,GAAGrG,KAAI,SAACC,EAAKqG,GACjD,OACG,6BACIrG,EAAID,KAAI,SAACqF,EAAOkB,GACd,OAAO,cAAC,EAAD,CAAOlB,MAAOA,GAAYkB,OAF9BD,MAOf,OACG,uBAAOhB,UAAWC,IAAOrE,KAAzB,SACG,gCAAQA,MAKjB,IAAMA,EAAOwE,EAAUxE,KAAKmF,MAAM,GAAGrG,KAAI,SAACC,EAAKqG,GAC5C,OACG,6BACIrG,EAAID,KAAI,SAACqF,EAAOkB,GACd,OAAO,cAAC,EAAD,CAAOlB,MAAOA,GAAYkB,OAF9BD,MAQf,OACG,wBAAOhB,UAAWC,IAAOrE,KAAzB,UACG,gCAAQA,IACR,cAAC,EAAD,QCZMsF,EAzBS,SAACpB,GACvB,IAaIlE,EAAOxC,EAAW0G,EAAMC,OAAO,GAAGrF,KAbf,SAACC,EAAKF,GAC3B,OACE,6BACGE,EAAID,KAAI,SAACqF,EAAOvF,GACf,OAAc,IAAVuF,EACK,cAAC,EAAD,CAAoBA,MAAO,MAAbvF,GAEd,cAAC,EAAD,CAAOuF,MAAOD,EAAMC,OAAYvF,OALpCC,MAab,OACE,6BACE,gCACE,gCAAQmB,S,iBCLDuF,EAbG,SAACrB,GACf,IAAIhC,EAAI,EACJsD,EAAS,GACb,GAAI/E,EAAWO,QACX,OAAO,oBAAIoD,UAAaC,IAAO5D,aAGnC,IAAK,IAAIgF,KAAchF,EAAWE,SAC9B6E,EAAO3F,KAAK,cAAC,EAAD,CAA6BsE,MAAS1D,EAAWE,SAAS8E,IAAlCvD,MAExC,OAAO,oBAAIkC,UAAaC,IAAO5D,WAAxB,SAAqC+E,K,iBC+CjCE,EAvDG,WAChB,IAAMlB,EAAYC,aAAY,SAACnF,GAAD,OAAWA,EAAMkF,aAC/C,IAAKA,EAAU9C,UACb,OACE,qBAAK0C,UAAWC,IAAOsB,UAAvB,SACE,gCACE,kCACE,+BACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,+BACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,+BACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,cAQZ,IAcI3F,EAAOxC,EAAWgH,EAAU9C,WAAW,GAAG5C,KAdvB,SAACC,EAAKF,GAC3B,OACE,6BACGE,EAAID,KAAI,SAACqF,EAAOvF,GACf,OAAc,IAAVuF,EACK,cAAC,EAAD,CAAkBA,MAAO,MAAbvF,GAEZ,cAAC,EAAD,CAAOuF,MAAOK,EAAU9C,WAAgB9C,OAL5CC,MAab,OACE,qBAAKuF,UAAWC,IAAOsB,UAAvB,SACE,gCACE,gCAAQ3F,SCvDL4F,EAAe,GAEfC,GAAgB,GAChBC,GAAkB,GA6BdC,GA3BK,WAClBC,OAAOC,iBAAiB,WAAW,SAACC,GAClCN,EAAaM,EAAMC,MAAO,EACR,QAAdD,EAAMC,MACRD,EAAME,iBACNF,EAAMG,mBAEU,MAAdH,EAAMC,MACRD,EAAME,iBACNF,EAAMG,mBAEU,cAAdH,EAAMC,MACRD,EAAME,iBACNF,EAAMG,mBAEU,YAAdH,EAAMC,MACRD,EAAME,iBACNF,EAAMG,sBAGVL,OAAOC,iBAAiB,SAAS,SAACC,GAChCJ,GAAgBI,EAAMC,KAAO,EAC7BP,EAAaM,EAAMC,MAAO,EAC1BN,GAAcK,EAAMC,MAAO,M,oBCXhBG,GAfG,WAChB,OACE,qBAAKlC,UAAWC,KAAOkC,UAAvB,SACE,+BACE,kDACA,8DACA,sDACA,4CACA,sDACA,0DCCJC,IAAa,EA2KFC,GAzKF,WACV,IAAMC,EAAWC,cACXrF,EAAcmD,aAAY,SAACnF,GAAD,OAAWA,EAAMkF,UAAUlD,eACrDC,EAAoBkD,aAAY,SAACnF,GAAD,OAAWA,EAAMkF,UAAUjD,qBAC3DK,EAAiB6C,aAAY,SAACnF,GAAD,OAAWA,EAAMkF,UAAU5C,kBAE9D,EAAkCgF,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAiBAC,qBAAU,WACP,IAAMC,EAAoBhB,OAAOiB,aAAY,WAfzC3F,IACyB,WAAtBC,GACDmF,EAAS3C,EAAiB3B,cAC1BsE,EAAS3C,EAAiBL,kBAC1BgD,EAAS3C,EAAiBrB,eAC1BgE,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,oBAE1BmD,EAAS3C,EAAiBb,aAC1BwD,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,sBAQ7B,KACG2D,EAAsBlB,OAAOiB,aAAY,WAC5CE,MACA,GACGC,EAAqBpB,OAAOiB,aAAY,WAC3CI,MACA,GAEH,OAAO,WACJrB,OAAOsB,cAAcN,GACrBhB,OAAOsB,cAAcJ,GACrBlB,OAAOsB,cAAcF,OAG3BL,qBAAU,WACP,GAAIF,EAAW,CACZ,IAAMU,EAAWvB,OAAOiB,aAAY,WACjCP,EAAS3C,EAAiB9B,kBAC1B,KACH,OAAO,WACJ+D,OAAOsB,cAAcC,OAG3B,CAAC3F,EAAgB8E,EAAUG,IAE9B,IAAMQ,EAAkB,WACrB,GAAK/F,IAAekF,GAApB,CAGA,IAAK,IAAIL,KAAOL,GACTA,GAAgBK,KACjBL,GAAgBK,IAAQ,GAI3BP,EAAY,WACZC,GAAa,WACbC,GAAe,UAAgB,KAE/BY,EAAS3C,EAAiBb,aAC1B2C,GAAa,WAAgB,EAC7BC,GAAe,UAAgB,IAG/BF,EAAY,YACZC,GAAa,YACbC,GAAe,WAAiB,KAEhCY,EAAS3C,EAAiBN,cAC1BiD,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,kBAC1BsC,GAAa,YAAiB,EAC9BC,GAAe,WAAiB,IAGhCF,EAAY,WACZC,GAAa,WACbC,GAAe,UAAgB,KAE/BY,EAAS3C,EAAiBP,aAC1BkD,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,kBAC1BsC,GAAa,WAAgB,EAC7BC,GAAe,UAAgB,MAG/BqB,EAAa,WACX7F,IAAekF,KAGhBZ,EAAY,IAAUC,GAAa,IACpCa,EAAS3C,EAAiBlB,aAAY,IACtC6D,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,kBAC1BsC,GAAa,GAAQ,GAEpBD,EAAY,IAAUC,GAAa,IACpCa,EAAS3C,EAAiBlB,aAAY,IACtC6D,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,kBAC1BsC,GAAa,GAAQ,GAEpBD,EAAa,OAASC,GAAc,OACrCW,IAAa,EACbE,EAAS3C,EAAiBT,YAC1BuC,GAAc,MAAO,EACrB2B,YAAW,WACRhB,IAAa,IACb,MAEFZ,EAAY,MAAYC,GAAa,MACtCa,EAAS3C,EAAiBJ,aAC1B+C,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,kBAC1BsC,GAAa,KAAU,GAEtBD,EAAY,YAAkBC,GAAa,YAC5CC,GAAe,UAAgB,EAC/BY,EAAS3C,EAAiBb,aAC1B2C,GAAa,WAAgB,GAE5BD,EAAY,aAAmBC,GAAa,aAC7CC,GAAe,WAAiB,EAChCY,EAAS3C,EAAiBN,cAC1BiD,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,kBAC1BsC,GAAa,YAAiB,GAE7BD,EAAY,YAAkBC,GAAa,YAC5CC,GAAe,UAAgB,EAC/BY,EAAS3C,EAAiBP,aAC1BkD,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,kBAC1BsC,GAAa,WAAgB,KAYnC,OATA4B,SAASC,UAAY,SAACC,GACC,WAAhBA,EAAQxB,MACTW,GAAa,GACbJ,EAAS3C,EAAiB/B,WAC1B0E,EAAS3C,EAAiBrB,eAC1BgE,EAAS3C,EAAiBZ,kBAC1BuD,EAAS3C,EAAiBR,oBAI7B,eAAC,WAAD,WACG,cAAC,GAAD,IACA,sBACGmB,MAAO,CACJkD,QAAS,QAFf,UAKG,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEH,cAAC,GAAD,QCtKMC,GATM,WAClB,OACG,eAAC,WAAD,WACG,wCACA,cAAC,GAAD,Q,kBCAHC,GAAQ,WACX,IAAMC,EAAatD,aAAY,SAACnF,GAAD,OAAWA,EAAM4F,SAAS6C,cACzD,EAA0CnB,mBAAS,IAAnD,mBAAOoB,EAAP,KAAsBC,EAAtB,KACMC,EAAY,iDAAG,WAAOhC,GAAP,kFAClBA,EAAME,iBADY,SAEZ+B,aAAkBnM,GAFN,OAGlBwE,aAAIzD,aAAMD,EAAgBd,EAAKoM,YAAYlL,KAAM,CAACI,SAAS0K,EAAcK,QAAO,IAChFJ,EAAiB,IAJC,2CAAH,sDAQZK,EAAa,iDAAG,wFACnBC,aAAOxL,aAAMD,EAAgBd,EAAKoM,YAAYlL,MAC9CsL,aAAQxM,GAFW,2CAAH,qDAKnB,OAAK+L,EAeK,wBAAQU,QAASH,EAAjB,oBAbJ,uBAAMI,SAAUR,EAAhB,UACG,uBAAOS,GAAG,OAAV,wBACA,uBACGA,GAAG,OACHxK,MAAO6J,EACPY,SAAU,SAAC1C,GACR+B,EAAiB/B,EAAM2C,OAAO1K,UAGpC,+CAOG2K,kBAAKhB,IC5BdiB,GAAgB5H,YAAY,CAC/BC,KAAM,WACNC,aAb0B,CAC1B0G,YAAY,EACZiB,WAAY,KACZC,WAAY,GACZC,QAAS,KACTC,aAAc,GACdC,YAAa,KACbC,eAAgB,GAChBrJ,KAAO,IAMP6B,SAAU,CACPyH,MADO,SACDhK,GACHA,EAAMyI,YAAa,GAEtBwB,OAJO,SAIAjK,GACJA,EAAMyI,YAAa,GAEtByB,cAPO,SAOOlK,EAAOmK,GAClBnK,EAAM2J,WAAaQ,GAEtBC,WAVO,SAUIpK,EAAO6G,GACf7G,EAAM4J,QAAU/C,GAEnBwD,cAbO,SAaOrK,EAAOsK,GAClBtK,EAAM0J,WAAaY,GAEtBC,gBAhBO,SAgBSvK,EAAO6J,GACpB7J,EAAM6J,aAAeA,GAExBW,cAnBO,SAmBOxK,EAAOqJ,GAClBrJ,EAAMyK,WAAapB,GAEtBqB,mBAtBO,SAsBY1K,EAAO2K,GACvB3K,EAAM+J,eAAiBY,GAE1BC,QAzBO,SAyBC5K,EAAMU,GACX2C,QAAQC,IAAI5C,GACZV,EAAMU,KAAOA,MAKTmK,GAAkBpB,GAAc/E,QAE9B+E,MAAf,QC3BeqB,GAlBG,SAAC,GAAuB,IAArB9M,EAAoB,EAApBA,SAAUJ,EAAU,EAAVA,IACtBwJ,EAAWC,cACX0D,EAAexK,aAAK7C,GACpBsN,EAAiB,iDAAG,+FACvBC,aAAIvN,GADmB,SAEjBwD,aAAI6J,EAAc,CAAEG,QAASxO,EAAKoM,YAAYlL,IAAKuN,QAASvN,EAAKwN,UAAU,IAF1D,OAGvBhE,EAASyD,GAAgBR,cAAc,YACvCjD,EAASyD,GAAgBT,WAAWW,EAAalE,MACjDO,EAASyD,GAAgBN,gBAAgBvM,IACzCoJ,EAASyD,GAAgBL,cAAc5M,IANhB,2CAAH,qDAQvB,OACG,6BACG,wBAAQuL,QAAS6B,EAAjB,SAAqChN,OCdxCqN,GAAa,WAChB,IAAMC,EAAiBnG,aAAY,SAACnF,GAAD,OAAWA,EAAM4F,SAAS+D,WAAWhG,WAClE4H,EAAuBD,EACxBA,EAAe9L,KAAI,SAACgM,EAAMC,GAAP,OAChB,cAAC,GAAD,CAAuBzN,SAAUwN,EAAK,GAAGxN,SAAUJ,IAAK4N,EAAK,IAA7CC,MAEnB,KACL,GAAIF,EACD,OAAO,6BAAKA,KAGH/B,kBAAK6B,I,6BCPdK,GAAW,WACd,OAAO,qBAAK5G,UAAWC,KAAO4G,YAG3BC,GAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OAAO,qBAAK/G,UAAWC,KAAO+G,MAAvB,SAA+BD,KAEnCE,GAAgB5D,SAAS6D,eAAe,YAExCC,GAAiB,WACpB,IAAM7E,EAAWC,cACXwC,EAAe1E,aAAY,SAACnF,GAAD,OAAWA,EAAM4F,SAASiE,aAAalG,WAClE8G,EAAatF,aAAY,SAACnF,GAAD,OAAWA,EAAM4F,SAAS6E,WAAW9G,WAC9DiG,EAAUzE,aAAY,SAACnF,GAAD,OAAWA,EAAM4F,SAASgE,QAAQjG,WACxDuI,EAAiB,iDAAG,wGACjBjD,YAAOxL,YAAMC,EAAUkM,IADN,OAEvBxC,EAASyD,GAAgBT,WAAW,OACpChD,EAASyD,GAAgBN,gBAAgB,KAHlB,2CAAH,qDAcvB,OARA4B,YAAa1O,YAAMC,EAAUkM,IAAUX,SACvCmD,YAAQ3O,YAAMD,EAAgBiN,IAAa,SAAC1M,GACpCA,EAASsO,WAAYtO,EAASE,MAAM8K,SACtCmD,IACA7I,QAAQC,IAAI,aAKf,eAAC,WAAD,WACIgJ,wBAAa,cAAC,GAAD,IAAcP,IAC3BO,wBACE,eAAC,GAAD,0BACgBzC,EADhB,WAEG,wBAAQV,QAAS+C,EAAjB,uBAEHH,QAMGvC,kBAAKyC,ICxBLM,GAnBW,SAAC,GAA8B,IAA5B3C,EAA2B,EAA3BA,QAAS4C,EAAkB,EAAlBA,YAC7BpF,EAAWC,cACjB,EAAwCC,mBAAS,MAAjD,mBAAOuC,EAAP,KAAqBU,EAArB,KACMkC,EAAe,iDAAG,oGACrBlC,EADqB,SACC5M,EAAmB6O,GADpB,6EAAH,qDAarB,OADAC,IACO,wBAAQtD,QATM,WAClBjI,YAAIzD,YAAMC,EAAUkM,EAAU,cAAc,GAC5CxC,EACG3C,EAAiBF,eAAe,CAAEtD,aAAc,EAAGuD,QAAS/G,YAAMC,EAAUkM,MAE/ExC,EAASyD,GAAgBR,cAAc,kBAInC,SAAgCR,KCnBpC6C,GAAsB,WACzB,IAAIC,EAAcxH,aAAY,SAACnF,GAAD,OAAWA,EAAM4F,SAASmE,kBAUxD,OATyB,IAArB4C,EAAY/N,SACb+N,EAAcA,EAAYhJ,QAAQnE,KAAI,WAA2BiM,GAA3B,IAAG7B,EAAH,EAAGA,QAAS4C,EAAZ,EAAYA,YAAZ,OACnC,cAAC,GAAD,CAEG5C,QAASA,EACT4C,YAAaA,GAFRf,OAMP,8BAAMkB,KAGDnD,kBAAKkD,ICELE,GAdC,WACb,IAAMxF,EAAWC,cAEXwF,EAAUpP,YAAMyB,EAAW,QAQjC,OAPAkN,YAAQS,GAAS,SAAC9O,GACfsF,QAAQC,IAAI,QACRvF,EAASsO,UACVjF,EAASyD,GAAgBD,QAAQ7M,EAASE,WAIzC,cAAC,EAAD,KCcK6O,GAnBG,WAEf,IAAMC,EAAa5H,aAAY,SAACnF,GAAD,OAAWA,EAAM4F,SAAS8D,WAAW/F,WAE9D1C,EAAekE,aAAY,SAACnF,GAAD,OAAWA,EAAMkF,UAAUjE,gBAE5D,OACG,eAAC,WAAD,WACG,mDACgB,qBAAf8L,GAAqC,cAAC,GAAD,IACtB,qBAAfA,GAAqC,cAAC,GAAD,IACtB,YAAfA,GAA4B,cAAC,GAAD,IAC7B,cAAC,GAAD,IACgB,iBAAfA,GAAkD,IAAjB9L,GAAsB,cAAC,GAAD,IACxC,iBAAf8L,GAAkD,IAAjB9L,GAAsB,cAAC,GAAD,Q,oBCHlD+L,GArBO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACG,qBAAInI,UAAWC,KAAO,WAAtB,UACG,oBACGoE,QAAS,WACN8D,EAAQ,iBAFd,0BAOA,oBACG9D,QAAS,WACN8D,EAAQ,eAFd,4BCiGMC,GAlGH,WACT,IAAM9F,EAAWC,cACjB,EAAwBC,mBAAS,cAAC,GAAD,KAAjC,mBAAO6F,EAAP,KAAaF,EAAb,KAUAG,YAAmB1Q,GAAM,SAAC2Q,GACnBA,GACDjG,EAASyD,GAAgBb,SACzB5C,EAASyD,GAAgBR,cAAc,uBAEvCjD,EAASyD,GAAgBZ,UACzB7C,EAASyD,GAAgBR,cAAc,WAI7CiD,YAAa5P,GAAU,WAChBhB,EAAKoM,aACNjL,YAAIH,GAAUI,MAAK,SAACC,GACbA,EAASsO,UACVjF,EACGyD,GAAgBH,mBACb6C,OAAOC,QAAQzP,EAASE,OACpBwP,QACE,SAACC,GAAD,OAAWA,EAAK,GAAGtC,UAAYsC,EAAK,GAAGvC,UAAYzO,EAAKoM,YAAYlL,OAEtE4B,KAAI,SAACkO,GACH,MAAO,CAAElB,YAAakB,EAAK,GAAGxC,QAAStB,QAAS8D,EAAK,eAO7EC,YAAejQ,GAAU,WAClBhB,EAAKoM,aACNjL,YAAIH,GAAUI,MAAK,SAACC,GACbA,EAASsO,SACVjF,EACGyD,GAAgBH,mBACb6C,OAAOC,QAAQzP,EAASE,OACpBwP,QACE,SAACC,GAAD,OAAWA,EAAK,GAAGtC,UAAYsC,EAAK,GAAGvC,UAAYzO,EAAKoM,YAAYlL,OAEtE4B,KAAI,SAACkO,GACH,MAAO,CAAElB,YAAakB,EAAK,GAAGxC,QAAStB,QAAS8D,EAAK,SAKjEtG,EAASyD,GAAgBH,mBAAmB,WAKxD0B,YAAQ5O,GAAgB,WACjBd,EAAKoM,aACNjL,YAAIL,GAAgBM,MAAK,SAACC,GACnBA,EAASE,OACVmJ,EACGyD,GAAgBX,cACbqD,OAAOC,QAAQzP,EAASE,OAAOwP,QAC5B,SAACjC,GAAD,OAAUA,EAAK,KAAO9O,EAAKoM,YAAYlL,MAAQ4N,EAAK,GAAGzC,kBAS5E,IAAMa,EAAUzE,aAAY,SAACnF,GAAD,OAAWA,EAAM4F,SAASgE,WActD,OAbIA,GACDwC,YAAQ3O,YAAMC,EAAUkM,EAAQjG,QAAU,cAAc,SAAC5F,GACjDA,EAASsO,SAEHtO,EAASE,OACjBmJ,EAAS3C,EAAiBF,eAAe,CAACtD,aAAa,EAAEuD,QAAQ/G,YAAMC,EAAUkM,EAAQjG,YACzFyD,EAASyD,GAAgBR,cAAc,kBAEvCjD,EAASyD,GAAgBR,cAAc,YALvCjD,EAASyD,GAAgBR,cAAc,wBAW7C,eAAC,IAAMuD,SAAP,WACG,cAAC,GAAD,CAAeX,QA1FK,SAACY,GACxBzG,EAAS3C,EAAiBjC,SACT,iBAAbqL,EACDZ,EAAQ,cAAC,GAAD,KACa,eAAbY,GACRZ,EAAQ,cAAC,GAAD,QAsFPE,MChGKW,GAJDC,YAAe,CAC1BC,QAAS,CAAE9I,UAAW+I,EAAkBrI,SAAUsI,MCAxCC,IAASC,WAAWjG,SAAS6D,eAAe,SACpDqC,OACH,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,GAAD,S","file":"static/js/main.1aec0d4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__9Fsru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Block_block__1kjjl\",\"None\":\"Block_None__ltR1S\",\"I\":\"Block_I__1Pnys\",\"T\":\"Block_T__WdEBm\",\"L\":\"Block_L__1zsbc\",\"J\":\"Block_J__2iV29\",\"Z\":\"Block_Z__28EjD\",\"S\":\"Block_S__MKS_j\",\"O\":\"Block_O__3X5pc\",\"Ighost\":\"Block_Ighost__1pBKL\",\"Tghost\":\"Block_Tghost__2h680\",\"Lghost\":\"Block_Lghost__3KiXo\",\"Jghost\":\"Block_Jghost__9BTwX\",\"Zghost\":\"Block_Zghost__3ytmC\",\"Sghost\":\"Block_Sghost__1z9Pj\",\"Oghost\":\"Block_Oghost__34NVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pieceQueue\":\"PieceQueue_pieceQueue__N5gJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heldBlock\":\"HeldBlock_heldBlock__2nV0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"WaitingMessage_backdrop__1TWDa\",\"modal\":\"WaitingMessage_modal__2ko18\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"howToPlay\":\"HowToPlay_howToPlay__2-hPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-bar\":\"NavigationBar_nav-bar__2WU1z\"};","// Import the functions you need from the SDKs you need\nimport { getAuth } from \"@firebase/auth\";\nimport { child, get, getDatabase, ref } from \"@firebase/database\";\nimport { initializeApp } from \"firebase/app\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA9ipNK6_boqbwThQlJgolni-O5iIgIl40\",\n  authDomain: \"ditris-2244c.firebaseapp.com\",\n  databaseURL: \"https://ditris-2244c-default-rtdb.firebaseio.com\",\n  projectId: \"ditris-2244c\",\n  storageBucket: \"ditris-2244c.appspot.com\",\n  messagingSenderId: \"743373731037\",\n  appId: \"1:743373731037:web:9552a80db8b0df8d875734\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth()\nexport const db = getDatabase()\nexport const rootRef = ref(db);\nexport const onlineUsersRef = child(rootRef,'users')\nexport const roomsRef= child(rootRef,'rooms')\nexport const getUsernameFromuid = async (uid) =>{\n  let username;\n  await get(child(onlineUsersRef,uid)).then(snapshot=>{username = snapshot.val().username})\n  return username\n}\n\n\n","export const TETRIMINOS = {\n  I: [\n    //I\n    [\n      [1, 1, 1, 1],\n      [0, 0, 0, 0],\n    ],\n    [\n      [0, 0, 1, 0],\n      [0, 0, 1, 0],\n      [0, 0, 1, 0],\n      [0, 0, 1, 0],\n    ],\n    [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 1, 1, 1],\n      [0, 0, 0, 0],\n    ],\n    [\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n    ],\n  ],\n\n  T: [\n    //T\n    [\n      [0, 1, 0],\n      [1, 1, 1],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 1, 0],\n    ],\n    [\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 1, 0],\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 0],\n      [0, 1, 0],\n    ],\n  ],\n  L: [\n    //L\n    [\n      [0, 0, 1],\n      [1, 1, 1],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 0],\n      [0, 1, 1],\n    ],\n    [\n      [0, 0, 0],\n      [1, 1, 1],\n      [1, 0, 0],\n    ],\n    [\n      [1, 1, 0],\n      [0, 1, 0],\n      [0, 1, 0],\n    ],\n  ],\n  J: [\n    //J\n    [\n      [1, 0, 0],\n      [1, 1, 1],\n    ],\n    [\n      [0, 1, 1],\n      [0, 1, 0],\n      [0, 1, 0],\n    ],\n    [\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 0, 1],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 0],\n      [1, 1, 0],\n    ],\n  ],\n  Z: [\n    //Z\n    [\n      [1, 1, 0],\n      [0, 1, 1],\n    ],\n    [\n      [0, 0, 1],\n      [0, 1, 1],\n      [0, 1, 0],\n    ],\n    [\n      [0, 0, 0],\n      [1, 1, 0],\n      [0, 1, 1],\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 0],\n      [1, 0, 0],\n    ],\n  ],\n  S: [\n    //S\n    [\n      [0, 1, 1],\n      [1, 1, 0],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 0, 1],\n    ],\n    [\n      [0, 0, 0],\n      [0, 1, 1],\n      [1, 1, 0],\n    ],\n    [\n      [1, 0, 0],\n      [1, 1, 0],\n      [0, 1, 0],\n    ],\n  ],\n  O: [\n    //O\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n    ],\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n    ],\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n    ],\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n    ],\n  ],\n};\n\nexport const getRandomPiece = () => {\n  const value = Math.round(6 * Math.random());\n  switch (value) {\n    case 0:\n      return \"I\";\n    case 1:\n      return \"T\";\n    case 2:\n      return \"L\";\n    case 3:\n      return \"J\";\n    case 4:\n      return \"Z\";\n    case 5:\n      return \"S\";\n    case 6:\n      return \"O\";\n  }\n};\n\nexport const getPiece = (type, rotatePos, xPos, yPos) =>\n  TETRIMINOS[type][rotatePos].map((row, rowPos) =>\n    row.map((col, colPos) => {\n      if (col) {\n        return { x: xPos + colPos, y: yPos + rowPos };\n      }\n      return null;\n    })\n  );\n\nexport const rotatePiece = (isCounterClockwise, { type, rotatePos }) => {\n  return isCounterClockwise\n    ? rotatePos === 0\n      ? TETRIMINOS[type].length - 1\n      : rotatePos - 1\n    : rotatePos === TETRIMINOS[type].length - 1\n    ? 0\n    : rotatePos + 1;\n};\n\nexport const convertMappingToCoords = (mapping) => {\n  let coordArray = [];\n  for (const array of mapping) {\n    for (const coord of array) {\n      if (coord) {\n        coordArray.push(coord);\n      }\n    }\n  }\n  return coordArray;\n};\n","import { child, set } from \"@firebase/database\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nimport { TETRIMINOS } from \"../Components/GameUI/Tetrimino\";\n\nimport Queue from \"../modules/piece-queue\";\n\nlet pieceArray = [\"I\", \"I\", \"T\", \"T\", \"L\", \"L\", \"J\", \"J\", \"Z\", \"Z\", \"S\", \"S\", \"O\", \"O\"];\nconst getRandomPiece = () => {\n   if (pieceArray.length === 0) {\n      pieceArray = [\"I\", \"I\", \"T\", \"T\", \"L\", \"L\", \"J\", \"J\", \"Z\", \"Z\", \"S\", \"S\", \"O\", \"O\"];\n   }\n   const value = Math.floor(pieceArray.length * Math.random());\n   return pieceArray.splice(value, 1);\n};\n\nexport let myRoomRef = null;\n\nconst getCoords = (type, rotatePos, xPos, yPos) =>\n   TETRIMINOS[type][rotatePos].map((row, rowPos) =>\n      row.map((col, colPos) => {\n         if (col) {\n            return { x: xPos + colPos, y: yPos + rowPos };\n         }\n         return null;\n      })\n   );\n\nconst rotatePiece = (isCounterClockwise, state) => {\n   let { rotatePos } = state;\n   if (isCounterClockwise) {\n      if (rotatePos === 0) {\n         return 3;\n      } else {\n         return rotatePos - 1;\n      }\n   } else {\n      if (rotatePos === 3) {\n         return 0;\n      } else {\n         return rotatePos + 1;\n      }\n   }\n};\n\nconst convertMappingToCoords = (state, mapping, forGhost = false) => {\n   let coordArray = [];\n   for (const array of mapping) {\n      for (const coord of array) {\n         if (coord) {\n            if (coordIsValid(state, coord, forGhost)) {\n               coordArray.push(coord);\n            }\n         }\n      }\n   }\n   return coordArray;\n};\n\nconst gameStateInitialState = {\n   gameRunning: false,\n   currentShape: null,\n   currentCoords: [],\n   ghostCoords: [],\n   currentPieceState: \"NONE\",\n   rotatePos: 0,\n   xPos: 3,\n   yPos: 0,\n   totalLinesCleared: 0,\n   grid: [\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n      [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n   ],\n   // winCondition:(state) =>{return state.totalLinesCleared >= 5},\n   pieceQueue: null,\n   isGameWon: false,\n   heldPiece: null,\n   rotated: false,\n   displayMessage: null,\n\n   multiplayer: null,\n   playerNumber: null,\n};\n\nconst removeLastState = (state) => {\n   for (const coord of state.currentCoords) {\n      state.grid[coord.y][coord.x] = \"None\";\n   }\n};\n\nconst removeLastGhostPiece = (state) => {\n   for (const coord of state.ghostCoords) {\n      state.grid[coord.y][coord.x] = \"None\";\n   }\n};\n\nconst placeBlocks = (state, forGhost = false) => {\n   if (forGhost) {\n      const colorName = state.currentShape + \"ghost\";\n      for (const coord of state.ghostCoords) {\n         state.grid[coord.y][coord.x] = colorName;\n         for (const currentCoord of state.currentCoords) {\n            if (currentCoord.y === coord.y && currentCoord.x === coord.x) {\n               state.grid[coord.y][coord.x] = state.currentShape;\n            }\n         }\n      }\n   } else {\n      for (const coord of state.currentCoords) {\n         state.grid[coord.y][coord.x] = state.currentShape;\n      }\n      if (state.multiplayer) {\n            \n         if (state.playerNumber === 1) {\n            set(child(myRoomRef, \"grid\"), state.grid)\n         }\n      }\n   }\n};\n\nconst coordIsValid = (state, coord, forGhost = false) => {\n   if (coord) {\n      if (coord.y <= 20 && coord.x >= 0 && coord.x <= 9) {\n         for (let currentCoord of state.currentCoords) {\n            if (forGhost) {\n               if (currentCoord.y === coord.y && currentCoord.x === coord.x) {\n                  return true;\n               }\n            }\n         }\n         if (state.grid[coord.y][coord.x].length > 1) {\n            return true;\n         }\n      }\n   }\n   return false;\n};\n\n\nexport let pieceQueue = new Queue();\n\nconst gameStateSlice = createSlice({\n   name: \"gameState\",\n   initialState: gameStateInitialState,\n   reducers: {\n      reset(state) {\n         pieceArray = [\"I\", \"I\", \"T\", \"T\", \"L\", \"L\", \"J\", \"J\", \"Z\", \"Z\", \"S\", \"S\", \"O\", \"O\"];\n         state.grid = [\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n         ];\n         state.xPos = 3;\n         state.yPos = 0;\n         state.rotatePos = 0;\n         state.totalLinesCleared = 0;\n         state.displayMessage = null;\n         state.currentPieceState = \"GETTING READY\";\n         pieceQueue.empty();\n         state.gameRunning = false;\n      },\n      newGame(state) {\n         pieceArray = [\"I\", \"I\", \"T\", \"T\", \"L\", \"L\", \"J\", \"J\", \"Z\", \"Z\", \"S\", \"S\", \"O\", \"O\"];\n         state.grid = [\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n            [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"],\n         ];\n         state.xPos = 3;\n         state.yPos = 0;\n         state.rotatePos = 0;\n         state.totalLinesCleared = 0;\n         state.displayMessage = \"READY\";\n         state.currentPieceState = \"GETTING READY\";\n         pieceQueue.empty();\n         state.gameRunning = false;\n      },\n      gettingReady(state) {\n         if (state.currentPieceState === \"GETTING READY\") {\n            state.currentPieceState = \"BEFORE START\";\n            state.displayMessage = \"GO!\";\n         } else if (state.currentPieceState === \"BEFORE START\") {\n            state.displayMessage = null;\n            state.gameRunning = true;\n            state.currentShape = getRandomPiece()[0];\n            for (let i = 0; i < 5; i++) {\n               pieceQueue.enqueue(...getRandomPiece());\n            }\n         }\n      },\n      clearLines(state) {\n         let newGrid = [];\n         let linesCleared = 0;\n         for (const row of state.grid) {\n            if (row.every((blockType) => blockType !== \"None\")) {\n               state.totalLinesCleared += 1;\n               linesCleared += 1;\n            } else {\n               newGrid.push(row);\n            }\n         }\n         for (let i = 0; i < linesCleared; i++) {\n            newGrid.unshift([\n               \"None\",\n               \"None\",\n               \"None\",\n               \"None\",\n               \"None\",\n               \"None\",\n               \"None\",\n               \"None\",\n               \"None\",\n               \"None\",\n            ]);\n         }\n         state.grid = newGrid;\n      },\n      getNewPiece(state) {\n         if (!state.gameRunning) {\n            return;\n         }\n         state.ghostCoords = [];\n         state.rotated = false;\n         state.currentShape = pieceQueue.dequeue();\n         pieceQueue.enqueue(...getRandomPiece());\n         state.xPos = 3;\n         state.yPos = 0;\n         state.rotatePos = 0;\n         state.currentCoords = convertMappingToCoords(\n            state,\n            getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n         );\n         if (state.currentCoords.length < 4) {\n            state.gameRunning = false;\n            state.displayMessage = \"YOU LOST\";\n            console.log(\"lost\");\n            return;\n         }\n         placeBlocks(state);\n         state.currentPieceState = \"FALLING\";\n      },\n      rotatePiece(state, action) {\n         const originalRotatePos = state.rotatePos;\n         state.rotatePos = rotatePiece(action.payload, {\n            rotatePos: state.rotatePos,\n         });\n         removeLastState(state);\n         state.currentCoords = convertMappingToCoords(\n            state,\n            getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n         );\n         if (state.currentCoords.length < 4) {\n            state.rotatePos = originalRotatePos;\n            state.currentCoords = convertMappingToCoords(\n               state,\n               getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n            );\n         } else {\n            state.currentPieceState = \"FALLING\";\n         }\n         placeBlocks(state);\n      },\n      dropPiece(state) {\n         if (state.gameRunning) {\n            if (state.currentPieceState === \"LANDING\") {\n               state.currentPieceState = \"FROZEN\";\n               return;\n            }\n            removeLastState(state);\n            state.yPos += 1;\n            state.currentCoords = convertMappingToCoords(\n               state,\n               getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n            );\n            if (state.currentCoords.length < 4) {\n               state.yPos -= 1;\n               state.currentCoords = convertMappingToCoords(\n                  state,\n                  getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n               );\n               state.currentPieceState = \"LANDING\";\n            } else {\n               state.currentPieceState = \"FALLING\";\n            }\n            placeBlocks(state);\n         } else {\n         }\n      },\n      getGhostCoords(state) {\n         if (!state.gameRunning) {\n            return;\n         }\n         removeLastGhostPiece(state);\n         state.ghostCoords = [];\n         for (let coord of state.currentCoords) {\n            state.ghostCoords.push({ x: coord.x, y: coord.y });\n         }\n         let ghostYPos = state.yPos;\n         while (state.ghostCoords.length === 4) {\n            ghostYPos += 1;\n            state.ghostCoords = convertMappingToCoords(\n               state,\n               getCoords(state.currentShape, state.rotatePos, state.xPos, ghostYPos),\n               true\n            );\n         }\n         ghostYPos -= 1;\n         state.ghostCoords = convertMappingToCoords(\n            state,\n            getCoords(state.currentShape, state.rotatePos, state.xPos, ghostYPos),\n            true\n         );\n      },\n      hardDrop(state) {\n         removeLastState(state);\n         state.currentCoords = state.ghostCoords;\n         placeBlocks(state);\n         state.currentPieceState = \"FROZEN\";\n      },\n      showGhostPiece(state) {\n         if (!state.gameRunning) {\n            return;\n         }\n         placeBlocks(state, true);\n      },\n      shiftLeft(state) {\n         removeLastState(state);\n         state.xPos -= 1;\n         state.currentCoords = convertMappingToCoords(\n            state,\n            getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n         );\n         if (state.currentCoords.length < 4) {\n            state.xPos += 1;\n            state.currentCoords = convertMappingToCoords(\n               state,\n               getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n            );\n         } else {\n            state.currentPieceState = \"FALLING\";\n         }\n         placeBlocks(state);\n      },\n      shiftRight(state) {\n         removeLastState(state);\n         state.xPos += 1;\n         state.currentCoords = convertMappingToCoords(\n            state,\n            getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n         );\n         if (state.currentCoords.length < 4) {\n            state.xPos -= 1;\n            state.currentCoords = convertMappingToCoords(\n               state,\n               getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n            );\n         } else {\n            state.currentPieceState = \"FALLING\";\n         }\n         placeBlocks(state);\n      },\n      checkIfGameWon(state) {\n         if (state.totalLinesCleared >= 4) {\n            console.log(\"won\");\n            state.isGameWon = true;\n            state.gameRunning = false;\n            state.displayMessage = \"YOU WON\";\n         }\n      },\n      holdPiece(state) {\n         if (state.rotated === true) {\n            return;\n         }\n         state.rotated = true;\n\n         removeLastState(state);\n         if (state.heldPiece === null) {\n            state.heldPiece = state.currentShape;\n            state.currentShape = pieceQueue.dequeue();\n            pieceQueue.enqueue(...getRandomPiece());\n         } else {\n            const placeHolder = state.currentShape;\n            state.currentShape = state.heldPiece;\n            state.heldPiece = placeHolder;\n         }\n         state.xPos = 3;\n         state.yPos = 0;\n         state.rotatePos = 0;\n         state.currentCoords = convertMappingToCoords(\n            state,\n            getCoords(state.currentShape, state.rotatePos, state.xPos, state.yPos)\n         );\n         placeBlocks(state);\n         state.currentPieceState = \"FALLING\";\n      },\n      setMultiplayer(state, action) {\n         state.multiplayer = true;\n         state.playerNumber = action.payload.playerNumber;\n         myRoomRef = action.payload.roomRef;\n      },\n\n      // setWinCondition(state,condition){\n      //   state.winCondition = condition;\n      // }\n   },\n});\n\nexport const gameStateActions = gameStateSlice.actions;\n\nexport default gameStateSlice.reducer;\n","export default class Queue {\n    constructor() {\n      this.elements = {};\n      this.head = 0;\n      this.tail = 0;\n    }\n    enqueue(element) {\n      this.elements[this.tail] = element;\n      this.tail++;\n    }\n    dequeue() {\n      const item = this.elements[this.head];\n      delete this.elements[this.head];\n      this.head++;\n      return item;\n    }\n    peek() {\n      return this.elements[this.head];\n    }\n    empty(){\n        while(!this.isEmpty){\n            this.dequeue()\n        }\n    }\n    get length() {\n      return this.tail - this.head;\n    }\n    get isEmpty() {\n      return this.length === 0;\n    }\n  }","import styles from \"./Block.module.css\";\n\nconst Block = (props) => {\n  const color = props.color;\n  return <td className={`${styles.block}  ${styles[color]}`}></td>;\n};\n\nexport default Block;\n","import { useSelector } from \"react-redux\";\n\nconst ReadyGo = () => {\n   const gameState = useSelector((state) => state.gameState);\n   return (\n      <div\n         style={{\n            position: \"absolute\",\n            color: \"yellow\",\n            marginLeft: 90,\n            marginTop: 240,\n            fontSize:\"300%\",\n            width:\"100%\"\n         }}\n      >\n         {gameState.displayMessage}\n      </div>\n   );\n};\n\nexport default ReadyGo;\n","import { useSelector, useDispatch } from \"react-redux\";\n\nimport styles from \"./Grid.module.css\";\nimport Block from \"./Block\";\nimport ReadyGo from \"./ReadyGo\";\n\nconst Grid = () => {\n   const gameState = useSelector((state) => state.gameState);\n   const player2Grid = useSelector((state) => state.userInfo.grid);\n   console.log(player2Grid);\n   if (player2Grid.length !== 0) {\n      const grid = player2Grid.payload.slice(1).map((row, y_pos) => {\n         return (\n            <tr key={y_pos}>\n               {row.map((color, x_pos) => {\n                  return <Block color={color} key={x_pos} />;\n               })}\n            </tr>\n         );\n      });\n      return (\n         <table className={styles.grid}>\n            <tbody>{grid}</tbody>\n         </table>\n      );\n   }\n\n   const grid = gameState.grid.slice(1).map((row, y_pos) => {\n      return (\n         <tr key={y_pos}>\n            {row.map((color, x_pos) => {\n               return <Block color={color} key={x_pos} />;\n            })}\n         </tr>\n      );\n   });\n\n   return (\n      <table className={styles.grid}>\n         <tbody>{grid}</tbody>\n         <ReadyGo></ReadyGo>\n      </table>\n   );\n};\n\nexport default Grid;\n","import Block from \"./Block\";\nimport { TETRIMINOS } from \"./Tetrimino\";\n\nconst PieceQueuePiece = (props) => {\n  const convertToPiece = (row, yPos) => {\n    return (\n      <tr key={yPos}>\n        {row.map((color, xPos) => {\n          if (color === 0) {\n            return <Block key = {xPos} color={null} />;\n          } else {\n            return <Block color={props.color} key={xPos} />;\n          }\n        })}\n      </tr>\n    );\n  };\n  let grid = TETRIMINOS[props.color][0].map(convertToPiece);\n\n  return (\n    <li>\n      <table>\n        <tbody>{grid}</tbody>\n      </table>\n    </li>\n  );\n};\n\nexport default PieceQueuePiece;\n","import PieceQueuePiece from \"./PieceQueuePiece\";\nimport styles from './PieceQueue.module.css'\nimport {pieceQueue} from '../../store/GameState'\n\nconst PieceQueue= (props) =>{\n    let i = 0\n    let pieces = []\n    if (pieceQueue.isEmpty){\n        return <ul className = {styles.pieceQueue}></ul>\n    }\n\n    for (let pieceColor in pieceQueue.elements){\n        pieces.push(<PieceQueuePiece key = {i++} color = {pieceQueue.elements[pieceColor]}/>)\n    }\n    return <ul className = {styles.pieceQueue}>{pieces}</ul>\n}\n\nexport default PieceQueue;","import styles from \"./HeldBlock.module.css\";\n\nimport { TETRIMINOS } from \"./Tetrimino\";\nimport { useSelector } from \"react-redux\";\nimport Block from \"./Block\";\n\nconst HeldBlock = () => {\n  const gameState = useSelector((state) => state.gameState);\n  if (!gameState.heldPiece) {\n    return (\n      <div className={styles.heldBlock}>\n        <table>\n          <tbody>\n            <tr>\n              <Block />\n              <Block />\n              <Block />\n              <Block />\n            </tr>\n            <tr>\n              <Block />\n              <Block />\n              <Block />\n              <Block />\n            </tr>\n            <tr>\n              <Block />\n              <Block />\n              <Block />\n              <Block />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  const convertToPiece = (row, yPos) => {\n    return (\n      <tr key={yPos}>\n        {row.map((color, xPos) => {\n          if (color === 0) {\n            return <Block key={xPos} color={null} />;\n          } else {\n            return <Block color={gameState.heldPiece} key={xPos} />;\n          }\n        })}\n      </tr>\n    );\n  };\n\n  let grid = TETRIMINOS[gameState.heldPiece][0].map(convertToPiece);\n  return (\n    <div className={styles.heldBlock}>\n      <table>\n        <tbody>{grid}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default HeldBlock;\n","export let keyIsPressed = {};\nexport let keyIsShifted = {};\nexport let keyIsDisabled = {};\nexport let keyShiftCounter = {};\n\nconst KeyControls = () => {\n  window.addEventListener(\"keydown\", (event) => {\n    keyIsPressed[event.key] = true\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    if (event.key === \" \") {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  });\n  window.addEventListener(\"keyup\", (event) => {\n    keyShiftCounter[event.key] = 0\n    keyIsPressed[event.key] = false\n    keyIsDisabled[event.key] = false;\n  });\n};\n\nexport default KeyControls;\n","import  styles  from \"./HowToPlay.module.css\";\n\nconst HowToPlay = () => {\n  return (\n    <div className={styles.howToPlay}>\n      <ul>\n        <li>esc = start game</li>\n        <li>q = rotate counter clockwise</li>\n        <li>w = rotate clockwise</li>\n        <li>tab = hold</li>\n        <li>spacebar = hard drop</li>\n        <li>use arrows to move</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default HowToPlay;\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { gameStateActions } from \"../../store/GameState\";\nimport Grid from \"./Grid\";\nimport PieceQueue from \"./PieceQueue\";\nimport HeldBlock from \"./HeldBlock\";\n\nimport { keyShiftCounter, keyIsPressed, keyIsDisabled } from \"../../modules/KeyControls\";\nimport KeyControls from \"../../modules/KeyControls\";\nimport HowToPlay from \"./HowToPlay\";\n\nlet gameLocked = false;\n\nconst Game = () => {\n   const dispatch = useDispatch();\n   const gameRunning = useSelector((state) => state.gameState.gameRunning);\n   const currentPieceState = useSelector((state) => state.gameState.currentPieceState);\n   const displayMessage = useSelector((state) => state.gameState.displayMessage);\n\n   const [startGame, setStartGame] = useState(false);\n\n   const gameLoop = () => {\n      if (gameRunning) {\n         if (currentPieceState === \"FROZEN\") {\n            dispatch(gameStateActions.clearLines());\n            dispatch(gameStateActions.checkIfGameWon());\n            dispatch(gameStateActions.getNewPiece());\n            dispatch(gameStateActions.getGhostCoords());\n            dispatch(gameStateActions.showGhostPiece());\n         } else {\n            dispatch(gameStateActions.dropPiece());\n            dispatch(gameStateActions.getGhostCoords());\n            dispatch(gameStateActions.showGhostPiece());\n         }\n      }\n   };\n   useEffect(() => {\n      const dropPieceInterval = window.setInterval(() => {\n      \n         gameLoop();\n      }, 300);\n      const handleInputInterval = window.setInterval(() => {\n         keyHandler();\n      }, 1);\n      const shiftInputInterval = window.setInterval(() => {\n         keyShiftHandler();\n      }, 1);\n\n      return () => {\n         window.clearInterval(dropPieceInterval);\n         window.clearInterval(handleInputInterval);\n         window.clearInterval(shiftInputInterval);\n      };\n   });\n   useEffect(() => {\n      if (startGame) {\n         const interval = window.setInterval(() => {\n            dispatch(gameStateActions.gettingReady());\n         }, 500);\n         return () => {\n            window.clearInterval(interval);\n         };\n      }\n   }, [displayMessage, dispatch, startGame]);\n\n   const keyShiftHandler = () => {\n      if (!gameRunning || gameLocked) {\n         return;\n      }\n      for (let key in keyShiftCounter) {\n         if (keyShiftCounter[key]) {\n            keyShiftCounter[key] += 1;\n         }\n      }\n      if (\n         keyIsPressed[\"ArrowDown\"] &&\n         keyIsDisabled[\"ArrowDown\"] &&\n         keyShiftCounter[\"ArrowDown\"] > 40\n      ) {\n         dispatch(gameStateActions.dropPiece());\n         keyIsDisabled[\"ArrowDown\"] = true;\n         keyShiftCounter[\"ArrowDown\"] = 30;\n      }\n      if (\n         keyIsPressed[\"ArrowRight\"] &&\n         keyIsDisabled[\"ArrowRight\"] &&\n         keyShiftCounter[\"ArrowRight\"] > 40\n      ) {\n         dispatch(gameStateActions.shiftRight());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[\"ArrowRight\"] = true;\n         keyShiftCounter[\"ArrowRight\"] = 20;\n      }\n      if (\n         keyIsPressed[\"ArrowLeft\"] &&\n         keyIsDisabled[\"ArrowLeft\"] &&\n         keyShiftCounter[\"ArrowLeft\"] > 40\n      ) {\n         dispatch(gameStateActions.shiftLeft());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[\"ArrowLeft\"] = true;\n         keyShiftCounter[\"ArrowLeft\"] = 20;\n      }\n   };\n   const keyHandler = () => {\n      if (!gameRunning || gameLocked) {\n         return;\n      }\n      if (keyIsPressed[\"q\"] && !keyIsDisabled[\"q\"]) {\n         dispatch(gameStateActions.rotatePiece(true));\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[\"q\"] = true;\n      }\n      if (keyIsPressed[\"w\"] && !keyIsDisabled[\"w\"]) {\n         dispatch(gameStateActions.rotatePiece(false));\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[\"w\"] = true;\n      }\n      if (keyIsPressed[\" \"] && !keyIsDisabled[\" \"]) {\n         gameLocked = true;\n         dispatch(gameStateActions.hardDrop());\n         keyIsDisabled[\" \"] = true;\n         setTimeout(() => {\n            gameLocked = false;\n         }, 400);\n      }\n      if (keyIsPressed[\"Tab\"] && !keyIsDisabled[\"Tab\"]) {\n         dispatch(gameStateActions.holdPiece());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[\"Tab\"] = true;\n      }\n      if (keyIsPressed[\"ArrowDown\"] && !keyIsDisabled[\"ArrowDown\"]) {\n         keyShiftCounter[\"ArrowDown\"] = 1;\n         dispatch(gameStateActions.dropPiece());\n         keyIsDisabled[\"ArrowDown\"] = true;\n      }\n      if (keyIsPressed[\"ArrowRight\"] && !keyIsDisabled[\"ArrowRight\"]) {\n         keyShiftCounter[\"ArrowRight\"] = 1;\n         dispatch(gameStateActions.shiftRight());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[\"ArrowRight\"] = true;\n      }\n      if (keyIsPressed[\"ArrowLeft\"] && !keyIsDisabled[\"ArrowLeft\"]) {\n         keyShiftCounter[\"ArrowLeft\"] = 1;\n         dispatch(gameStateActions.shiftLeft());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[\"ArrowLeft\"] = true;\n      }\n   };\n   document.onkeydown = (keycode) => {\n      if (keycode.key === \"Escape\") {\n         setStartGame(true);\n         dispatch(gameStateActions.newGame());\n         dispatch(gameStateActions.getNewPiece());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n      }\n   };\n   return (\n      <Fragment>\n         <KeyControls />\n         <div\n            style={{\n               display: \"flex\",\n            }}\n         >\n            <HeldBlock />\n            <Grid></Grid>\n            <PieceQueue />\n         </div>\n         <HowToPlay></HowToPlay>\n      </Fragment>\n   );\n};\n\nexport default Game;\n","import { Fragment } from \"react\";\nimport Game from \"../Components/GameUI/Game\";\n\nconst SinglePlayer = () => {\n   return (\n      <Fragment>\n         <h1>Ditris</h1>\n         <Game></Game>\n      </Fragment>\n   );\n};\n\nexport default SinglePlayer;\n","import { signInAnonymously, signOut } from \"firebase/auth\";\nimport { child, remove, set } from \"firebase/database\";\nimport { memo, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { auth, onlineUsersRef } from \"../../modules/firebase-config\";\n\n\nconst Login = () => {\n   const isLoggedIn = useSelector((state) => state.userInfo.isLoggedIn);\n   const [usernameInput, setUsernameInput] = useState(\"\");\n   const loginHandler = async (event) => {\n      event.preventDefault();\n      await signInAnonymously(auth);\n      set(child(onlineUsersRef, auth.currentUser.uid), {username:usernameInput,inRoom:false});\n      setUsernameInput(\"\");\n\n   };\n\n   const logoutHandler = async () => {\n      remove(child(onlineUsersRef, auth.currentUser.uid));\n      signOut(auth);\n   };\n\n   if (!isLoggedIn) {\n      return (\n         <form onSubmit={loginHandler}>\n            <label id=\"name\">Username: </label>\n            <input\n               id=\"name\"\n               value={usernameInput}\n               onChange={(event) => {\n                  setUsernameInput(event.target.value);\n               }}\n            ></input>\n            <button>Login</button>\n         </form>\n      );\n   } else {\n      return <button onClick={logoutHandler}>Logout</button>;\n   }\n};\nexport default memo(Login);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userInfoInitialState = {\n   isLoggedIn: false,\n   roomStatus: null, //\"looking for room\" \"waiting\" \"done waiting\"\n   otherUsers: [],\n   roomKey: null,\n   opponentName: \"\",\n   oppoenentID: null,\n   invitationKeys: [],\n   grid : [],\n};\n\nconst userInfoSlice = createSlice({\n   name: \"UserInfo\",\n   initialState: userInfoInitialState,\n   reducers: {\n      login(state) {\n         state.isLoggedIn = true;\n      },\n      logout(state) {\n         state.isLoggedIn = false;\n      },\n      setOtherUsers(state, users) {\n         state.otherUsers = users;\n      },\n      setRoomKey(state, key) {\n         state.roomKey = key;\n      },\n      setRoomStatus(state, newStatus) {\n         state.roomStatus = newStatus;\n      },\n      setOpponentName(state, opponentName) {\n         state.opponentName = opponentName;\n      },\n      setOpponentid(state, id) {\n         state.opponentID = id;\n      },\n      setInvitiationKeys(state, keysList) {\n         state.invitationKeys = keysList;\n      },\n      setGrid(state,grid){\n         console.log(grid)\n         state.grid = grid\n      }\n   },\n});\n\nexport const userInfoActions = userInfoSlice.actions;\n\nexport default userInfoSlice.reducer;\n","import { off, push, set } from \"firebase/database\";\nimport { useDispatch } from \"react-redux\";\nimport { auth,  roomsRef } from \"../../modules/firebase-config\";\nimport { userInfoActions } from \"../../store/UserInfo\";\n\nconst OtherUser = ({ username, uid }) => {\n   const dispatch = useDispatch();\n   const pushRoomsRef = push(roomsRef);\n   const createRoomHandler = async () => {\n      off(roomsRef)\n      await set(pushRoomsRef, { player1: auth.currentUser.uid, player2: uid, accepted: false });\n      dispatch(userInfoActions.setRoomStatus(\"waiting\"));\n      dispatch(userInfoActions.setRoomKey(pushRoomsRef.key));\n      dispatch(userInfoActions.setOpponentName(username));\n      dispatch(userInfoActions.setOpponentid(uid));\n   };\n   return (\n      <li>\n         <button onClick={createRoomHandler}>{username}</button>\n      </li>\n   );\n};\n\nexport default OtherUser;\n","import { memo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport OtherUser from \"./OtherUser\";\n\nconst OtherUsers = () => {\n   const otherUsersList = useSelector((state) => state.userInfo.otherUsers.payload);\n   const otherUserListDisplay = otherUsersList\n      ? otherUsersList.map((pair, index) => (\n           <OtherUser key={index} username={pair[1].username} uid={pair[0]}></OtherUser>\n        ))\n      : null;\n   if (otherUserListDisplay) {\n      return <ul>{otherUserListDisplay}</ul>;\n   }\n};\nexport default memo(OtherUsers);\n","import { child, onDisconnect, onValue, remove } from \"@firebase/database\";\nimport { Fragment, memo } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onlineUsersRef, roomsRef } from \"../../modules/firebase-config\";\nimport { userInfoActions } from \"../../store/UserInfo\";\n\nimport styles from \"./WaitingMessage.module.css\";\nconst Backdrop = () => {\n   return <div className={styles.backdrop}></div>;\n};\n\nconst ModalOverlay = ({ children }) => {\n   return <div className={styles.modal}>{children}</div>;\n};\nconst portalElement = document.getElementById(\"overlays\");\n\nconst WaitingMessage = () => {\n   const dispatch = useDispatch();\n   const opponentName = useSelector((state) => state.userInfo.opponentName.payload);\n   const opponentID = useSelector((state) => state.userInfo.opponentID.payload);\n   const roomKey = useSelector((state) => state.userInfo.roomKey.payload);\n   const cancelRoomHandler = async () => {\n      await remove(child(roomsRef, roomKey));\n      dispatch(userInfoActions.setRoomKey(null));\n      dispatch(userInfoActions.setOpponentName(\"\"));\n   };\n   \n   onDisconnect(child(roomsRef, roomKey)).remove();\n   onValue(child(onlineUsersRef, opponentID), (snapshot) => {\n      if (!snapshot.exists() || snapshot.val().inRoom) {\n         cancelRoomHandler();\n         console.log(\"error\")\n      }\n   });\n\n   return (\n      <Fragment>\n         {createPortal(<Backdrop />, portalElement)}\n         {createPortal(\n            <ModalOverlay>\n               Waiting for {opponentName} to join\n               <button onClick={cancelRoomHandler}>Cancel</button>\n            </ModalOverlay>,\n            portalElement\n         )}\n      </Fragment>\n   );\n};\n\nexport default memo(WaitingMessage);\n","import { child, set } from \"@firebase/database\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getUsernameFromuid, myRoomRef, roomsRef } from \"../../modules/firebase-config\";\nimport { gameStateActions } from \"../../store/GameState\";\nimport { userInfoActions } from \"../../store/UserInfo\";\n\nconst InviteNotfication = ({ roomKey, opponentuid }) => {\n   const dispatch = useDispatch();\n   const [opponentName, setOpponentName] = useState(null);\n   const getOpponentName = async () => {\n      setOpponentName(await getUsernameFromuid(opponentuid));\n   };\n\n   const acceptInvite = () => {\n      set(child(roomsRef, roomKey + \"/accepted\"), true);\n      dispatch(\n         gameStateActions.setMultiplayer({ playerNumber: 2, roomRef: child(roomsRef, roomKey) })\n      );\n      dispatch(userInfoActions.setRoomStatus(\"done waiting\"));\n   };\n\n   getOpponentName();\n   return <button onClick={acceptInvite}>{opponentName}</button>;\n};\n\nexport default InviteNotfication;\n","import { memo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport InviteNotfication from \"./InviteNotifcation\";\n\nconst InviteNotifications = () => {\n   let invitations = useSelector((state) => state.userInfo.invitationKeys);\n   if (invitations.length!==0) {\n      invitations = invitations.payload.map(({ roomKey, opponentuid }, index) => (\n         <InviteNotfication\n            key={index}\n            roomKey={roomKey}\n            opponentuid={opponentuid}\n         ></InviteNotfication>\n      ));\n   }\n   return <div>{invitations}</div>;\n};\n\nexport default memo(InviteNotifications);\n","import { child, off, onValue } from \"@firebase/database\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { myRoomRef } from \"../../store/GameState\";\nimport { userInfoActions } from \"../../store/UserInfo\";\nimport Grid from \"../GameUI/Grid\";\n\nconst GetGame = () => {\n   const dispatch = useDispatch();\n   // off(child(myRoomRef, \"grid\"))\n   const gridRef = child(myRoomRef, \"grid\");\n   onValue(gridRef, (snapshot) => {\n      console.log('here')\n      if (snapshot.exists()) {\n         dispatch(userInfoActions.setGrid(snapshot.val()));\n      }\n   });\n\n   return <Grid></Grid>;\n};\n\nexport default GetGame;\n","import { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"../modules/firebase-config\";\nimport Login from \"../Components/Multiplayer/Login\";\nimport OtherUsers from \"../Components/Multiplayer/OtherUsers\";\n\nimport WaitingMessage from \"../Components/Multiplayer/WaitingMessage\";\nimport InviteNotification from \"../Components/Multiplayer/InviteNotfications\";\nimport Game from \"../Components/GameUI/Game\";\nimport GetGame from \"../Components/Multiplayer/GetGame\";\n\nconst TwoPlayer = () => {\n\n   const userStatus = useSelector((state) => state.userInfo.roomStatus.payload);\n\n   const playerNumber = useSelector((state) => state.gameState.playerNumber);\n\n   return (\n      <Fragment>\n         <h1>Ditris Two-Player</h1>\n         {userStatus === \"looking for room\" && <InviteNotification />}\n         {userStatus === \"looking for room\" && <OtherUsers />}\n         {userStatus === \"waiting\" && <WaitingMessage />}\n         <Login></Login>\n         {userStatus === \"done waiting\" && playerNumber === 1 && <Game></Game>}\n         {userStatus === \"done waiting\" && playerNumber === 2 && <GetGame></GetGame>}\n      </Fragment>\n   );\n};\n\nexport default TwoPlayer;\n","import styles from \"./NavigationBar.module.css\";\n\nconst NavigationBar = ({ setPage }) => {\n   return (\n      <ul className={styles[\"nav-bar\"]}>\n         <li\n            onClick={() => {\n               setPage(\"singleplayer\");\n            }}\n         >\n            SinglePlayer\n         </li>\n         <li\n            onClick={() => {\n               setPage(\"two-player\");\n            }}\n         >\n            Two-Player\n         </li>\n      </ul>\n   );\n};\n\nexport default NavigationBar;\n","import { onAuthStateChanged } from \"@firebase/auth\";\nimport { child, get, onChildAdded, onChildRemoved, onValue } from \"@firebase/database\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { auth, onlineUsersRef, roomsRef } from \"./modules/firebase-config\";\nimport SinglePlayer from \"./Pages/SinglePlayer\";\nimport TwoPlayer from \"./Pages/TwoPlayer\";\nimport { gameStateActions } from \"./store/GameState\";\nimport { userInfoActions } from \"./store/UserInfo\";\nimport NavigationBar from \"./UI/NavigationBar\";\n\nconst App = () => {\n   const dispatch = useDispatch();\n   const [page, setPage] = useState(<SinglePlayer></SinglePlayer>);\n   const changePageHandler = (pageName) => {\n      dispatch(gameStateActions.reset());\n      if (pageName === \"singleplayer\") {\n         setPage(<SinglePlayer></SinglePlayer>);\n      } else if (pageName === \"two-player\") {\n         setPage(<TwoPlayer></TwoPlayer>);\n      }\n   };\n\n   onAuthStateChanged(auth, (user) => {\n      if (user) {\n         dispatch(userInfoActions.login());\n         dispatch(userInfoActions.setRoomStatus(\"looking for room\"));\n      } else {\n         dispatch(userInfoActions.logout());\n         dispatch(userInfoActions.setRoomStatus(null));\n      }\n   });\n\n   onChildAdded(roomsRef, () => {\n      if (auth.currentUser)\n         get(roomsRef).then((snapshot) => {\n            if (snapshot.exists())\n               dispatch(\n                  userInfoActions.setInvitiationKeys(\n                     Object.entries(snapshot.val())\n                        .filter(\n                           (room) => !room[1].accepted && room[1].player2 === auth.currentUser.uid\n                        )\n                        .map((room) => {\n                           return { opponentuid: room[1].player1, roomKey: room[0] };\n                        })\n                  )\n               );\n         });\n   });\n\n   onChildRemoved(roomsRef, () => {\n      if (auth.currentUser)\n         get(roomsRef).then((snapshot) => {\n            if (snapshot.exists()) {\n               dispatch(\n                  userInfoActions.setInvitiationKeys(\n                     Object.entries(snapshot.val())\n                        .filter(\n                           (room) => !room[1].accepted && room[1].player2 === auth.currentUser.uid\n                        )\n                        .map((room) => {\n                           return { opponentuid: room[1].player1, roomKey: room[0] };\n                        })\n                  )\n               );\n            } else {\n               dispatch(userInfoActions.setInvitiationKeys([]));\n            }\n         });\n   });\n\n   onValue(onlineUsersRef, () => {\n      if (auth.currentUser) {\n         get(onlineUsersRef).then((snapshot) => {\n            if (snapshot.val()) {\n               dispatch(\n                  userInfoActions.setOtherUsers(\n                     Object.entries(snapshot.val()).filter(\n                        (pair) => pair[0] !== auth.currentUser.uid && !pair[1].inRoom\n                     )\n                  )\n               );\n            }\n         });\n      }\n   });\n\n   const roomKey = useSelector((state) => state.userInfo.roomKey);\n   if (roomKey) {\n      onValue(child(roomsRef, roomKey.payload + \"/accepted\"), (snapshot) => {\n         if (!snapshot.exists()) {\n            dispatch(userInfoActions.setRoomStatus(\"looking for room\"));\n         } else if (snapshot.val()) {\n            dispatch(gameStateActions.setMultiplayer({playerNumber:1,roomRef:child(roomsRef, roomKey.payload)}))\n            dispatch(userInfoActions.setRoomStatus(\"done waiting\"));\n         } else {\n            dispatch(userInfoActions.setRoomStatus(\"waiting\"));\n         }\n      });\n   }\n\n   return (\n      <React.Fragment>\n         <NavigationBar setPage={changePageHandler}></NavigationBar>\n         {page}\n      </React.Fragment>\n   );\n};\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport gameStateReducer from \"./GameState\";\nimport userInfoReducer from \"./UserInfo\";\n\nconst store = configureStore({\n   reducer: { gameState: gameStateReducer, userInfo: userInfoReducer },\n});\n\nexport default store;\n","import ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}